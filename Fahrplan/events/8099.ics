BEGIN:VCALENDAR
PRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN
CALSCALE:GREGORIAN
VERSION:2.0
BEGIN:VTIMEZONE
TZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin
BEGIN:STANDARD
DTSTART:20161030T030000
RDATE:20161030T030000
TZOFFSETFROM:+0200
TZOFFSETTO:+0100
TZNAME:CET
END:STANDARD
END:VTIMEZONE
BEGIN:VEVENT
DTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20161229T123000
DTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20161229T113000
DTSTAMP;VALUE=DATE-TIME:20161213T214338Z
UID:0d02bd82-f771-471c-b4bb-5e24b755b169@frab.cccv.de
DESCRIPTION:Pseudo-random number generators (PRNGs) are critical pieces o
 f security\ninfrastructure. Yet\, PRNGs are surprisingly difficult to de
 sign\,\nimplement\, and debug. The PRNG vulnerability that we recently f
 ound in\nGnuPG/Libgcrypt (CVE-2016-6313) survived 18 years of service an
 d several\nexpert audits. In this presentation\, we not only describe th
 e details of\nthe flaw but\, based on our research\, explain why the cur
 rent state of\nPRNG implementation and quality assurance downright provo
 kes incidents.\nWe also present a PRNG analysis method that we developed
  and give\nspecific recommendations to implementors of software producin
 g or\nconsuming pseudo-random numbers to ensure correctness.\n
URL://fahrplan.events.ccc.de/congress/2016/Fahrplan/events/8099.html
SUMMARY:How do we know our PRNGs work properly?
ORGANIZER:33c3
LOCATION:33c3 - Saal G
END:VEVENT
END:VCALENDAR
